#!/usr/bin/env python
import subprocess
import optparse
import re


def get_args():
    parser = optparse.OptionParser()
    parser.add_option('-i', '--interface', dest='interface', help='Interface to change')
    parser.add_option('-m', '--mac', dest='new_mac', help='New MAC address')
    (options, arguments) = parser.parse_args()
    if not options.interface:
        parser.error('[-] Please specify interface, use --help for more info')
    elif not options.new_mac:
        parser.error('[-] Please specify a new MAC Address, use --help for more info')
    return options


def change_mac(interface, mac):
    print(f'[-] Changing MAC address for {interface} to {mac}')
    subprocess.call('ifconfig eth0 down', shell=True)
    subprocess.call(f'ifconfig eth0 hw ether {mac}', shell=True)
    subprocess.call('ifconfig eth0 up', shell=True)


def get_current_mac(interface):
    ifconfig_result = subprocess.check_output(['ifconfig', interface], universal_newlines=True)

    mac_regexp = r'((\d|([a-f]|[A-F])){2}:){5}(\d|([a-f]|[A-F])){2}'
    ifconfig_mac_search_result = re.search(mac_regexp, ifconfig_result)

    if not ifconfig_mac_search_result:
        print('[!] Error: MAC address not finded')
    else:
        return ifconfig_mac_search_result.group(0)


options = get_args()

old_mac = get_current_mac(options.interface)

if old_mac:
    print(f'[-] Current MAC address: {old_mac}')

change_mac(options.interface, options.new_mac)

if options.new_mac == old_mac:
    print('[!] ERROR: MAC adress is not changed!')
else:
    print(f'[+] SUCCESS: MAC address changed to: {get_current_mac(options.interface)}')
